//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using SimpleJSON;


namespace cfg
{ 
   
public sealed partial class Tables
{
    public heroName.TbHeroName TbHeroName {get; }
    public monsterState.TbMonsterState TbMonsterState {get; }
    public equipment.TbEquipment TbEquipment {get; }
    public blockBattle.TbBlockBattle TbBlockBattle {get; }
    public blockMap.TbBlockMap TbBlockMap {get; }
    public monsterTeam.TbMonsterTeam TbMonsterTeam {get; }
    public buff.TbBuff TbBuff {get; }
    public heroLevelUp.TbHeroLevelUp TbHeroLevelUp {get; }
    public battleShopLevel.TbBattleShopLevel TbBattleShopLevel {get; }
    public battleShopItems.TbBattleShopItems TbBattleShopItems {get; }
    public battleShopItemsType.TbBattleShopItemsType TbBattleShopItemsType {get; }
    public heroAttrEntry.TbHeroAttrEntry TbHeroAttrEntry {get; }
    public translate.TbTranslate TbTranslate {get; }
    public attrConfig.TbAttrConfig TbAttrConfig {get; }
    public configValue.TbConfigValue TbConfigValue {get; }
    public skillConfig.TbSkillConfig TbSkillConfig {get; }
    public uiFormConfig.TbUIFormConfig TbUIFormConfig {get; }

    public Tables(System.Func<string, JSONNode> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbHeroName = new heroName.TbHeroName(loader("heroname_tbheroname")); 
        tables.Add("heroName.TbHeroName", TbHeroName);
        TbMonsterState = new monsterState.TbMonsterState(loader("monsterstate_tbmonsterstate")); 
        tables.Add("monsterState.TbMonsterState", TbMonsterState);
        TbEquipment = new equipment.TbEquipment(loader("equipment_tbequipment")); 
        tables.Add("equipment.TbEquipment", TbEquipment);
        TbBlockBattle = new blockBattle.TbBlockBattle(loader("blockbattle_tbblockbattle")); 
        tables.Add("blockBattle.TbBlockBattle", TbBlockBattle);
        TbBlockMap = new blockMap.TbBlockMap(loader("blockmap_tbblockmap")); 
        tables.Add("blockMap.TbBlockMap", TbBlockMap);
        TbMonsterTeam = new monsterTeam.TbMonsterTeam(loader("monsterteam_tbmonsterteam")); 
        tables.Add("monsterTeam.TbMonsterTeam", TbMonsterTeam);
        TbBuff = new buff.TbBuff(loader("buff_tbbuff")); 
        tables.Add("buff.TbBuff", TbBuff);
        TbHeroLevelUp = new heroLevelUp.TbHeroLevelUp(loader("herolevelup_tbherolevelup")); 
        tables.Add("heroLevelUp.TbHeroLevelUp", TbHeroLevelUp);
        TbBattleShopLevel = new battleShopLevel.TbBattleShopLevel(loader("battleshoplevel_tbbattleshoplevel")); 
        tables.Add("battleShopLevel.TbBattleShopLevel", TbBattleShopLevel);
        TbBattleShopItems = new battleShopItems.TbBattleShopItems(loader("battleshopitems_tbbattleshopitems")); 
        tables.Add("battleShopItems.TbBattleShopItems", TbBattleShopItems);
        TbBattleShopItemsType = new battleShopItemsType.TbBattleShopItemsType(loader("battleshopitemstype_tbbattleshopitemstype")); 
        tables.Add("battleShopItemsType.TbBattleShopItemsType", TbBattleShopItemsType);
        TbHeroAttrEntry = new heroAttrEntry.TbHeroAttrEntry(loader("heroattrentry_tbheroattrentry")); 
        tables.Add("heroAttrEntry.TbHeroAttrEntry", TbHeroAttrEntry);
        TbTranslate = new translate.TbTranslate(loader("translate_tbtranslate")); 
        tables.Add("translate.TbTranslate", TbTranslate);
        TbAttrConfig = new attrConfig.TbAttrConfig(loader("attrconfig_tbattrconfig")); 
        tables.Add("attrConfig.TbAttrConfig", TbAttrConfig);
        TbConfigValue = new configValue.TbConfigValue(loader("configvalue_tbconfigvalue")); 
        tables.Add("configValue.TbConfigValue", TbConfigValue);
        TbSkillConfig = new skillConfig.TbSkillConfig(loader("skillconfig_tbskillconfig")); 
        tables.Add("skillConfig.TbSkillConfig", TbSkillConfig);
        TbUIFormConfig = new uiFormConfig.TbUIFormConfig(loader("uiformconfig_tbuiformconfig")); 
        tables.Add("uiFormConfig.TbUIFormConfig", TbUIFormConfig);
        PostInit();

        TbHeroName.Resolve(tables); 
        TbMonsterState.Resolve(tables); 
        TbEquipment.Resolve(tables); 
        TbBlockBattle.Resolve(tables); 
        TbBlockMap.Resolve(tables); 
        TbMonsterTeam.Resolve(tables); 
        TbBuff.Resolve(tables); 
        TbHeroLevelUp.Resolve(tables); 
        TbBattleShopLevel.Resolve(tables); 
        TbBattleShopItems.Resolve(tables); 
        TbBattleShopItemsType.Resolve(tables); 
        TbHeroAttrEntry.Resolve(tables); 
        TbTranslate.Resolve(tables); 
        TbAttrConfig.Resolve(tables); 
        TbConfigValue.Resolve(tables); 
        TbSkillConfig.Resolve(tables); 
        TbUIFormConfig.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbHeroName.TranslateText(translator); 
        TbMonsterState.TranslateText(translator); 
        TbEquipment.TranslateText(translator); 
        TbBlockBattle.TranslateText(translator); 
        TbBlockMap.TranslateText(translator); 
        TbMonsterTeam.TranslateText(translator); 
        TbBuff.TranslateText(translator); 
        TbHeroLevelUp.TranslateText(translator); 
        TbBattleShopLevel.TranslateText(translator); 
        TbBattleShopItems.TranslateText(translator); 
        TbBattleShopItemsType.TranslateText(translator); 
        TbHeroAttrEntry.TranslateText(translator); 
        TbTranslate.TranslateText(translator); 
        TbAttrConfig.TranslateText(translator); 
        TbConfigValue.TranslateText(translator); 
        TbSkillConfig.TranslateText(translator); 
        TbUIFormConfig.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}