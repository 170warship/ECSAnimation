//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.blockBattle
{ 

public sealed partial class BlockBattle :  Bright.Config.BeanBase 
{
    public BlockBattle(JSONNode _json) 
    {
        { if(!_json["id"].IsString) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["Name"].IsString) { throw new SerializationException(); }  Name = _json["Name"]; }
        { var __json0 = _json["MonsterTeam"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; MonsterTeam = new string[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  MonsterTeam[__index0++] = __v0; }   }
        { var __json0 = _json["Weight"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; Weight = new int[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  Weight[__index0++] = __v0; }   }
        { var __json0 = _json["DropCoins"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; DropCoins = new int[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  DropCoins[__index0++] = __v0; }   }
        { var __json0 = _json["SelectEquipment"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; SelectEquipment = new string[_n0][]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string[] __v0;  { var __json1 = __e0; if(!__json1.IsArray) { throw new SerializationException(); } int _n1 = __json1.Count; __v0 = new string[_n1]; int __index1=0; foreach(JSONNode __e1 in __json1.Children) { string __v1;  { if(!__e1.IsString) { throw new SerializationException(); }  __v1 = __e1; }  __v0[__index1++] = __v1; }   }  SelectEquipment[__index0++] = __v0; }   }
        { if(!_json["TriggerPro"].IsNumber) { throw new SerializationException(); }  TriggerPro = _json["TriggerPro"]; }
        { if(!_json["CoefficientATK"].IsNumber) { throw new SerializationException(); }  CoefficientATK = _json["CoefficientATK"]; }
        { if(!_json["CoefficientHP"].IsNumber) { throw new SerializationException(); }  CoefficientHP = _json["CoefficientHP"]; }
        PostInit();
    }

    public BlockBattle(string id, string Name, string[] MonsterTeam, int[] Weight, int[] DropCoins, string[][] SelectEquipment, double TriggerPro, double CoefficientATK, double CoefficientHP ) 
    {
        this.Id = id;
        this.Name = Name;
        this.MonsterTeam = MonsterTeam;
        this.Weight = Weight;
        this.DropCoins = DropCoins;
        this.SelectEquipment = SelectEquipment;
        this.TriggerPro = TriggerPro;
        this.CoefficientATK = CoefficientATK;
        this.CoefficientHP = CoefficientHP;
        PostInit();
    }

    public static BlockBattle DeserializeBlockBattle(JSONNode _json)
    {
        return new blockBattle.BlockBattle(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 波次名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 怪物小队
    /// </summary>
    public string[] MonsterTeam { get; private set; }
    /// <summary>
    /// 怪物小队权重
    /// </summary>
    public int[] Weight { get; private set; }
    /// <summary>
    /// 掉落金币
    /// </summary>
    public int[] DropCoins { get; private set; }
    /// <summary>
    /// 选择装备
    /// </summary>
    public string[][] SelectEquipment { get; private set; }
    /// <summary>
    /// 商人事件触发概率
    /// </summary>
    public double TriggerPro { get; private set; }
    /// <summary>
    /// 关卡系数，攻击
    /// </summary>
    public double CoefficientATK { get; private set; }
    /// <summary>
    /// 关卡系数，血量
    /// </summary>
    public double CoefficientHP { get; private set; }

    public const int __ID__ = -1840425284;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "MonsterTeam:" + Bright.Common.StringUtil.CollectionToString(MonsterTeam) + ","
        + "Weight:" + Bright.Common.StringUtil.CollectionToString(Weight) + ","
        + "DropCoins:" + Bright.Common.StringUtil.CollectionToString(DropCoins) + ","
        + "SelectEquipment:" + Bright.Common.StringUtil.CollectionToString(SelectEquipment) + ","
        + "TriggerPro:" + TriggerPro + ","
        + "CoefficientATK:" + CoefficientATK + ","
        + "CoefficientHP:" + CoefficientHP + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
