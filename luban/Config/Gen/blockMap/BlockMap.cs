//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.blockMap
{ 

public sealed partial class BlockMap :  Bright.Config.BeanBase 
{
    public BlockMap(JSONNode _json) 
    {
        { if(!_json["id"].IsString) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["Name"].IsString) { throw new SerializationException(); }  Name = _json["Name"]; }
        { var __json0 = _json["Including"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; Including = new string[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  Including[__index0++] = __v0; }   }
        { if(!_json["TriggerCapping"].IsNumber) { throw new SerializationException(); }  TriggerCapping = _json["TriggerCapping"]; }
        { if(!_json["CooldownTime"].IsNumber) { throw new SerializationException(); }  CooldownTime = _json["CooldownTime"]; }
        PostInit();
    }

    public BlockMap(string id, string Name, string[] Including, int TriggerCapping, int CooldownTime ) 
    {
        this.Id = id;
        this.Name = Name;
        this.Including = Including;
        this.TriggerCapping = TriggerCapping;
        this.CooldownTime = CooldownTime;
        PostInit();
    }

    public static BlockMap DeserializeBlockMap(JSONNode _json)
    {
        return new blockMap.BlockMap(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 章节名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 包括的关卡
    /// </summary>
    public string[] Including { get; private set; }
    /// <summary>
    /// 商人触发事件上限
    /// </summary>
    public int TriggerCapping { get; private set; }
    /// <summary>
    /// 商人冷却时间
    /// </summary>
    public int CooldownTime { get; private set; }

    public const int __ID__ = 637380398;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Including:" + Bright.Common.StringUtil.CollectionToString(Including) + ","
        + "TriggerCapping:" + TriggerCapping + ","
        + "CooldownTime:" + CooldownTime + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
