//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.buff
{ 

public sealed partial class Buff :  Bright.Config.BeanBase 
{
    public Buff(JSONNode _json) 
    {
        { if(!_json["id"].IsString) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["Name"].IsString) { throw new SerializationException(); }  Name = _json["Name"]; }
        { if(!_json["Desc"].IsString) { throw new SerializationException(); }  Desc = _json["Desc"]; }
        { if(!_json["MaxFloors"].IsNumber) { throw new SerializationException(); }  MaxFloors = _json["MaxFloors"]; }
        { if(!_json["Floors"].IsNumber) { throw new SerializationException(); }  Floors = _json["Floors"]; }
        { if(!_json["ReduceTrigger"].IsString) { throw new SerializationException(); }  ReduceTrigger = _json["ReduceTrigger"]; }
        { var __json0 = _json["Result1"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; Result1 = new string[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  Result1[__index0++] = __v0; }   }
        { var __json0 = _json["Result2"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; Result2 = new string[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  Result2[__index0++] = __v0; }   }
        { var __json0 = _json["Result3"]; if(!__json0.IsArray) { throw new SerializationException(); } int _n0 = __json0.Count; Result3 = new string[_n0]; int __index0=0; foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  Result3[__index0++] = __v0; }   }
        { if(!_json["Tag"].IsString) { throw new SerializationException(); }  Tag = _json["Tag"]; }
        { if(!_json["Icon"].IsString) { throw new SerializationException(); }  Icon = _json["Icon"]; }
        { if(!_json["SpecialEffects"].IsString) { throw new SerializationException(); }  SpecialEffects = _json["SpecialEffects"]; }
        { if(!_json["TriggerSpecialEffects"].IsString) { throw new SerializationException(); }  TriggerSpecialEffects = _json["TriggerSpecialEffects"]; }
        PostInit();
    }

    public Buff(string id, string Name, string Desc, int MaxFloors, int Floors, string ReduceTrigger, string[] Result1, string[] Result2, string[] Result3, string Tag, string Icon, string SpecialEffects, string TriggerSpecialEffects ) 
    {
        this.Id = id;
        this.Name = Name;
        this.Desc = Desc;
        this.MaxFloors = MaxFloors;
        this.Floors = Floors;
        this.ReduceTrigger = ReduceTrigger;
        this.Result1 = Result1;
        this.Result2 = Result2;
        this.Result3 = Result3;
        this.Tag = Tag;
        this.Icon = Icon;
        this.SpecialEffects = SpecialEffects;
        this.TriggerSpecialEffects = TriggerSpecialEffects;
        PostInit();
    }

    public static Buff DeserializeBuff(JSONNode _json)
    {
        return new buff.Buff(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 最大层数
    /// </summary>
    public int MaxFloors { get; private set; }
    /// <summary>
    /// 每次触发获得层数
    /// </summary>
    public int Floors { get; private set; }
    /// <summary>
    /// 层数减少时机
    /// </summary>
    public string ReduceTrigger { get; private set; }
    /// <summary>
    /// buff效果1
    /// </summary>
    public string[] Result1 { get; private set; }
    /// <summary>
    /// buff效果2
    /// </summary>
    public string[] Result2 { get; private set; }
    /// <summary>
    /// buff效果3
    /// </summary>
    public string[] Result3 { get; private set; }
    /// <summary>
    /// 标签
    /// </summary>
    public string Tag { get; private set; }
    /// <summary>
    /// 调用的icon
    /// </summary>
    public string Icon { get; private set; }
    /// <summary>
    /// 调用常驻特效
    /// </summary>
    public string SpecialEffects { get; private set; }
    /// <summary>
    /// 调用触发特效
    /// </summary>
    public string TriggerSpecialEffects { get; private set; }

    public const int __ID__ = 9300270;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "MaxFloors:" + MaxFloors + ","
        + "Floors:" + Floors + ","
        + "ReduceTrigger:" + ReduceTrigger + ","
        + "Result1:" + Bright.Common.StringUtil.CollectionToString(Result1) + ","
        + "Result2:" + Bright.Common.StringUtil.CollectionToString(Result2) + ","
        + "Result3:" + Bright.Common.StringUtil.CollectionToString(Result3) + ","
        + "Tag:" + Tag + ","
        + "Icon:" + Icon + ","
        + "SpecialEffects:" + SpecialEffects + ","
        + "TriggerSpecialEffects:" + TriggerSpecialEffects + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
