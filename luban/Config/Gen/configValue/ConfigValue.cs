//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.configValue
{ 

public sealed partial class ConfigValue :  Bright.Config.BeanBase 
{
    public ConfigValue(JSONNode _json) 
    {
        { if(!_json["id"].IsString) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["Content"].IsString) { throw new SerializationException(); }  Content = _json["Content"]; }
        { if(!_json["clz"].IsString) { throw new SerializationException(); }  Clz = _json["clz"]; }
        PostInit();
    }

    public ConfigValue(string id, string Content, string clz ) 
    {
        this.Id = id;
        this.Content = Content;
        this.Clz = clz;
        PostInit();
    }

    public static ConfigValue DeserializeConfigValue(JSONNode _json)
    {
        return new configValue.ConfigValue(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 内容
    /// </summary>
    public string Content { get; private set; }
    /// <summary>
    /// 值类型
    /// </summary>
    public string Clz { get; private set; }

    public const int __ID__ = -1094611184;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Content:" + Content + ","
        + "Clz:" + Clz + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
