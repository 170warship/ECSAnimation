//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.heroLevelUp
{ 

public sealed partial class HeroLevelUp :  Bright.Config.BeanBase 
{
    public HeroLevelUp(JSONNode _json) 
    {
        { if(!_json["id"].IsString) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["NextLevel"].IsString) { throw new SerializationException(); }  NextLevel = _json["NextLevel"]; }
        { if(!_json["HP"].IsNumber) { throw new SerializationException(); }  HP = _json["HP"]; }
        { if(!_json["Att"].IsNumber) { throw new SerializationException(); }  Att = _json["Att"]; }
        { if(!_json["Speed"].IsNumber) { throw new SerializationException(); }  Speed = _json["Speed"]; }
        { if(!_json["Armor"].IsNumber) { throw new SerializationException(); }  Armor = _json["Armor"]; }
        { if(!_json["ArmorMagic"].IsNumber) { throw new SerializationException(); }  ArmorMagic = _json["ArmorMagic"]; }
        { if(!_json["PassAtt"].IsNumber) { throw new SerializationException(); }  PassAtt = _json["PassAtt"]; }
        { if(!_json["PassMagic"].IsNumber) { throw new SerializationException(); }  PassMagic = _json["PassMagic"]; }
        { if(!_json["SkillCD"].IsNumber) { throw new SerializationException(); }  SkillCD = _json["SkillCD"]; }
        { if(!_json["Baoji"].IsNumber) { throw new SerializationException(); }  Baoji = _json["Baoji"]; }
        { if(!_json["BaojiShanghai"].IsNumber) { throw new SerializationException(); }  BaojiShanghai = _json["BaojiShanghai"]; }
        { if(!_json["Shanbi"].IsNumber) { throw new SerializationException(); }  Shanbi = _json["Shanbi"]; }
        { if(!_json["Mingzhong"].IsNumber) { throw new SerializationException(); }  Mingzhong = _json["Mingzhong"]; }
        { if(!_json["Tizhong"].IsNumber) { throw new SerializationException(); }  Tizhong = _json["Tizhong"]; }
        { if(!_json["RemoteAttCD"].IsNumber) { throw new SerializationException(); }  RemoteAttCD = _json["RemoteAttCD"]; }
        { if(!_json["UpExp"].IsNumber) { throw new SerializationException(); }  UpExp = _json["UpExp"]; }
        PostInit();
    }

    public HeroLevelUp(string id, string NextLevel, int HP, int Att, int Speed, int Armor, int ArmorMagic, int PassAtt, int PassMagic, int SkillCD, int Baoji, int BaojiShanghai, int Shanbi, int Mingzhong, int Tizhong, int RemoteAttCD, int UpExp ) 
    {
        this.Id = id;
        this.NextLevel = NextLevel;
        this.HP = HP;
        this.Att = Att;
        this.Speed = Speed;
        this.Armor = Armor;
        this.ArmorMagic = ArmorMagic;
        this.PassAtt = PassAtt;
        this.PassMagic = PassMagic;
        this.SkillCD = SkillCD;
        this.Baoji = Baoji;
        this.BaojiShanghai = BaojiShanghai;
        this.Shanbi = Shanbi;
        this.Mingzhong = Mingzhong;
        this.Tizhong = Tizhong;
        this.RemoteAttCD = RemoteAttCD;
        this.UpExp = UpExp;
        PostInit();
    }

    public static HeroLevelUp DeserializeHeroLevelUp(JSONNode _json)
    {
        return new heroLevelUp.HeroLevelUp(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public string Id { get; private set; }
    /// <summary>
    /// 下一级索引
    /// </summary>
    public string NextLevel { get; private set; }
    /// <summary>
    /// 血
    /// </summary>
    public int HP { get; private set; }
    /// <summary>
    /// 攻击
    /// </summary>
    public int Att { get; private set; }
    /// <summary>
    /// 移速（攻速）
    /// </summary>
    public int Speed { get; private set; }
    /// <summary>
    /// 护甲
    /// </summary>
    public int Armor { get; private set; }
    /// <summary>
    /// 法术抗性
    /// </summary>
    public int ArmorMagic { get; private set; }
    /// <summary>
    /// 破甲（百分比）
    /// </summary>
    public int PassAtt { get; private set; }
    /// <summary>
    /// 破魔（百分比）
    /// </summary>
    public int PassMagic { get; private set; }
    /// <summary>
    /// 技能cd（百分比）
    /// </summary>
    public int SkillCD { get; private set; }
    /// <summary>
    /// 暴击率（百分比）
    /// </summary>
    public int Baoji { get; private set; }
    /// <summary>
    /// 爆伤（百分比）
    /// </summary>
    public int BaojiShanghai { get; private set; }
    /// <summary>
    /// 闪避率（百分比）
    /// </summary>
    public int Shanbi { get; private set; }
    /// <summary>
    /// 命中（百分比）
    /// </summary>
    public int Mingzhong { get; private set; }
    /// <summary>
    /// 击退距离
    /// </summary>
    public int Tizhong { get; private set; }
    /// <summary>
    /// 远程攻击cd
    /// </summary>
    public int RemoteAttCD { get; private set; }
    /// <summary>
    /// 升级经验
    /// </summary>
    public int UpExp { get; private set; }

    public const int __ID__ = 1735053116;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "NextLevel:" + NextLevel + ","
        + "HP:" + HP + ","
        + "Att:" + Att + ","
        + "Speed:" + Speed + ","
        + "Armor:" + Armor + ","
        + "ArmorMagic:" + ArmorMagic + ","
        + "PassAtt:" + PassAtt + ","
        + "PassMagic:" + PassMagic + ","
        + "SkillCD:" + SkillCD + ","
        + "Baoji:" + Baoji + ","
        + "BaojiShanghai:" + BaojiShanghai + ","
        + "Shanbi:" + Shanbi + ","
        + "Mingzhong:" + Mingzhong + ","
        + "Tizhong:" + Tizhong + ","
        + "RemoteAttCD:" + RemoteAttCD + ","
        + "UpExp:" + UpExp + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
